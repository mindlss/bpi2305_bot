name: Docker Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t mindes/bpi2305_bot:latest .
          docker push mindes/bpi2305_bot:latest

      - name: Transfer files via SCP
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          port: 22
          source: "docker-compose.yml"
          target: "/app/project/"
      
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          port: 22
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            
            mkdir -p /app/backend || echo "Папка /app/backend уже существует"
            echo 'BOT_TOKEN="${{ secrets.TELEGRAM_BOT_TOKEN }}"' > /app/backend/.env
            echo 'APP_PORT=3000' >> /app/backend/.env

            if [ ! -s /app/backend/.env ]; then
              echo "Ошибка: файл .env пустой или не создан!" && exit 1
            fi

            if [ $(docker ps -aq -f name=miniapp) ]; then
              docker stop miniapp && docker rm miniapp
            fi
            
            cd /app/project

            docker-compose down || true

            docker image prune -af
            docker container prune -f

            docker-compose up -d --build
